{"version":3,"sources":["../node_modules/@porsche-design-system/components-react/node_modules/@porsche-design-system/components-js/dist/esm-es5/p-text-list-item.entry.js","../node_modules/@porsche-design-system/components-react/node_modules/@porsche-design-system/components-js/dist/esm-es5/slotted-styles-9a18361d.js"],"names":["TextListItem","hostRef","registerInstance","this","prototype","componentDidLoad","addSlottedStyles","render","_a","textListItemClasses","prefix","typeOfList","typeOfOrderedList","isNestedList","h","Host","role","class","Object","defineProperty","get","host","closest","getAttribute","enumerable","configurable","tagName","toLowerCase","style","insertSlottedStyles","getElement","elementStyles","Map","element","css","rootNode","getRootNode","elementMap","map","undefined","newMap","set","getElementMap","document","createElement","appendChild","createTextNode","minifySlottedStyles","prependTo","head","getNodeToPrependTo","charsetTag","querySelector","insertBefore","nextSibling","childNodes","length","firstChild","replace"],"mappings":"mKAAA,6EAGIA,EAA8B,WAC9B,SAASA,EAAaC,GAClBC,YAAiBC,KAAMF,GAgD3B,OA9CAD,EAAaI,UAAUC,iBAAmB,WACtCF,KAAKG,oBAETN,EAAaI,UAAUG,OAAS,WAC5B,IAAIC,EACAC,IAAuBD,EAAK,IACzBE,YAAO,oBAAqB,EAC/BF,EAAGE,YAAO,mBAAqBP,KAAKQ,cAAe,EACnDH,EAAGE,YAAO,2BAA6BP,KAAKS,oBAA0C,YAApBT,KAAKQ,WACvEH,EAAGE,YAAO,2BAA6BP,KAAKU,aAC5CL,GACJ,OAAQM,YAAEC,IAAM,CAAEC,KAAM,WAAYC,MAAOR,GAAuBK,YAAE,OAAQ,QAEhFI,OAAOC,eAAenB,EAAaI,UAAW,aAAc,CACxDgB,IAAK,WAED,OADWjB,KAAKkB,KAAKC,QAAQZ,YAAO,cACxBa,aAAa,cAE7BC,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAenB,EAAaI,UAAW,oBAAqB,CAC/DgB,IAAK,WAED,OADWjB,KAAKkB,KAAKC,QAAQZ,YAAO,cACxBa,aAAa,eAE7BC,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAenB,EAAaI,UAAW,eAAgB,CAC1DgB,IAAK,WACD,QAASjB,KAAKkB,KAAKC,QAAQZ,YAAO,uBAEtCc,YAAY,EACZC,cAAc,IAElBzB,EAAaI,UAAUE,iBAAmB,WACtC,IAAIoB,EAAUvB,KAAKkB,KAAKK,QAAQC,cAC5BC,EAAQF,EAAU,oPAAsPA,EAAU,mDAAqDA,EAAU,yFACrVG,YAAoB1B,KAAKkB,KAAMO,IAEnCV,OAAOC,eAAenB,EAAaI,UAAW,OAAQ,CAClDgB,IAAK,WAAc,OAAOU,YAAW3B,OACrCqB,YAAY,EACZC,cAAc,IAEXzB,EAlDuB,GAoDlCA,EAAa4B,MArDS,w5C,iCCFtB,sCAAIG,EAAgB,IAAIC,IAyBpBH,EAAsB,SAAUI,EAASC,GACzC,IAAIC,EAAWF,EAAQG,cACnBC,EA1BY,SAAUJ,GAC1B,IAAIP,EAAUO,EAAQP,QAClBY,EAAMP,EAAcX,IAAIM,GAC5B,QAAYa,IAARD,EACA,OAAOA,EAEX,IAAIE,EAAS,IAAIR,IAEjB,OADAD,EAAcU,IAAIf,EAASc,GACpBA,EAkBUE,CAAcT,GAC/B,QAAiCM,IAA7BF,EAAWjB,IAAIe,GAAyB,CACxCE,EAAWI,IAAIN,GAAU,GACzB,IAAIP,EAAQe,SAASC,cAAc,SACnChB,EAAMiB,YAAYF,SAASG,eAAeC,EAAoBb,KAC9D,IAAIc,EArBa,SAAUb,GAC/B,OAAIA,IAAaQ,SACNR,EAASc,KAEbd,EAiBae,CAAmBf,GAC/BgB,EAAaH,EAAUI,cAAc,iBACtB,OAAfD,EACAH,EAAUK,aAAazB,EAAOuB,EAAWG,aAEpCN,EAAUO,WAAWC,OAAS,EACnCR,EAAUK,aAAazB,EAAOoB,EAAUS,YAGxCT,EAAUH,YAAYjB,KAI9BmB,EAAsB,SAAUb,GAAO,OAAOA,EAC7CwB,QAAQ,uBAAwB,IAChCA,QAAQ,WAAY,MACpBA,QAAQ,iBAAkB","file":"static/js/19.976667c7.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host, c as prefix, g as getElement } from './breakpointCustomizable-633ca215.js';\nimport { i as insertSlottedStyles } from './slotted-styles-9a18361d.js';\nvar textListItemCss = \":host{position:relative !important;display:list-item !important;color:inherit !important;list-style-type:none !important}:host(.p-text-list-item--unordered){padding-left:1.5rem !important}:host(.p-text-list-item--unordered)::before{content:\\\"\\\" !important;position:absolute !important;left:0 !important;top:calc(1.5em / 2 - 0.125em) !important;width:0.25rem !important;height:0.25rem !important;background-color:currentColor !important}:host(.p-text-list-item--unordered.p-text-list-item--nested)::before{height:1px !important;width:0.5rem !important;top:calc(1.5em / 2) !important}:host(.p-text-list-item--ordered){padding-left:2.5rem !important}:host(.p-text-list-item--ordered)::before{position:absolute !important;right:calc(100% - 24px) !important;top:0 !important;counter-increment:section !important;text-align:right !important;font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400}:host(.p-text-list-item--ordered-numbered)::before{content:counters(section, \\\".\\\", decimal) \\\".\\\" !important}:host(.p-text-list-item--ordered-alphabetically)::before{content:counters(section, \\\".\\\", lower-latin) \\\".\\\" !important}:host(.p-text-list-item--ordered-numbered.p-text-list-item--nested)::before{content:counters(section, \\\".\\\", decimal) !important}:host(.p-text-list-item--ordered-alphabetically.p-text-list-item--nested)::before{content:counters(section, \\\".\\\", lower-latin) !important}\";\nvar TextListItem = /** @class */ (function () {\n    function TextListItem(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    TextListItem.prototype.componentDidLoad = function () {\n        this.addSlottedStyles();\n    };\n    TextListItem.prototype.render = function () {\n        var _a;\n        var textListItemClasses = (_a = {},\n            _a[prefix('text-list-item')] = true,\n            _a[prefix(\"text-list-item--\" + this.typeOfList)] = true,\n            _a[prefix(\"text-list-item--ordered-\" + this.typeOfOrderedList)] = this.typeOfList === 'ordered',\n            _a[prefix('text-list-item--nested')] = this.isNestedList,\n            _a);\n        return (h(Host, { role: \"listitem\", class: textListItemClasses }, h(\"slot\", null)));\n    };\n    Object.defineProperty(TextListItem.prototype, \"typeOfList\", {\n        get: function () {\n            var list = this.host.closest(prefix('text-list'));\n            return list.getAttribute('list-type');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextListItem.prototype, \"typeOfOrderedList\", {\n        get: function () {\n            var list = this.host.closest(prefix('text-list'));\n            return list.getAttribute('order-type');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextListItem.prototype, \"isNestedList\", {\n        get: function () {\n            return !!this.host.closest(prefix('text-list[nested]'));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextListItem.prototype.addSlottedStyles = function () {\n        var tagName = this.host.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\\n    \";\n        insertSlottedStyles(this.host, style);\n    };\n    Object.defineProperty(TextListItem.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return TextListItem;\n}());\nTextListItem.style = textListItemCss;\nexport { TextListItem as p_text_list_item };\n","var elementStyles = new Map();\nvar getElementMap = function (element) {\n    var tagName = element.tagName;\n    var map = elementStyles.get(tagName);\n    if (map !== undefined) {\n        return map;\n    }\n    var newMap = new Map();\n    elementStyles.set(tagName, newMap);\n    return newMap;\n};\nvar getNodeToPrependTo = function (rootNode) {\n    if (rootNode === document) {\n        return rootNode.head;\n    }\n    return rootNode;\n};\n/**\n * Adds an inheritable style for slotted content.\n * @param element\n * @param css - Make sure that css selectors are always in context of element (make sure that\n * it's created dynamically by e.g. `element.tagName.toLowerCase()`), e.g. `a:focus p-link-pure {…}`. Something like\n * providing only `a {…}` would cause unscoped global styling.\n * @returns void\n */\nvar insertSlottedStyles = function (element, css) {\n    var rootNode = element.getRootNode();\n    var elementMap = getElementMap(element);\n    if (elementMap.get(rootNode) === undefined) {\n        elementMap.set(rootNode, true);\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(minifySlottedStyles(css)));\n        var prependTo = getNodeToPrependTo(rootNode);\n        var charsetTag = prependTo.querySelector('meta[charset]');\n        if (charsetTag !== null) {\n            prependTo.insertBefore(style, charsetTag.nextSibling);\n        }\n        else if (prependTo.childNodes.length > 0) {\n            prependTo.insertBefore(style, prependTo.firstChild);\n        }\n        else {\n            prependTo.appendChild(style);\n        }\n    }\n};\nvar minifySlottedStyles = function (css) { return css\n    .replace(/\\s{2,}|(\\/\\*.*\\*\\/)/g, '') // remove 2 and more white spaces + comments\n    .replace(/(:|;)\\s/g, '$1') // remove space after colon and semi colon\n    .replace(/[\\s;]({|})\\s?/g, '$1'); }; // remove semi colon and space before and after opening and closing curly bracket\nexport { insertSlottedStyles as i };\n"],"sourceRoot":""}