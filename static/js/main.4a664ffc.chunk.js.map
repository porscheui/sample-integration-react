{"version":3,"sources":["../node_modules/@porschehn/navigation/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/PerformancePage.tsx","routes.ts","pages/CollectionPage.tsx","pages/FormsPage.tsx","pages/PhnHeaderPage.tsx","pages/UtilitiesPage.tsx","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","SELECTABLE_ELEMENTS","SELECTABLE_COUNTS","routes","name","path","component","useState","showHeadline","setShowHeadline","activePage","setActivePage","isDisabled","setIsDisabled","size","variant","className","disabled","onClick","prev","href","role","totalItemsCount","itemsPerPage","onPageChange","event","detail","page","select","setSelect","checkBox","setCheckBox","radioButton","setRadioButton","textField","setTextField","handleTextField","target","value","direction","data-testid","onChange","handleSelect","label","hideLabel","type","onInput","slot","aria-invalid","element","setElement","count","setCount","shouldRender","setShouldRender","children","checked","style","marginTop","Array","from","i","createElement","env","position","left","right","paddingTop","text","medium","width","height","background","color","brand","App","align","route","to","exact","find","x","ReactDOM","render","document","getElementById","applyPolyfills","definePorscheNavigation","window"],"mappings":"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","file":"static/js/main.4a664ffc.chunk.js","sourcesContent":["var map = {\n\t\"./phn-back-button_36.entry.js\": [\n\t\t401,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 398;\nmodule.exports = webpackAsyncContext;","import {\n  PCheckboxWrapper,\n  PText,\n  PButton,\n  PSelectWrapper,\n  PGrid,\n  PGridItem,\n  PHeadline,\n} from '@porsche-design-system/components-react';\nimport { ChangeEvent, useState } from 'react';\n\ntype SelectableElement = 'text' | 'checkbox' | 'button';\n\nconst SELECTABLE_ELEMENTS: SelectableElement[] = ['text', 'checkbox', 'button'];\nconst SELECTABLE_COUNTS = [25, 50, 100];\n\nexport const PerformancePage = () => {\n  const [element, setElement] = useState<SelectableElement>('text');\n  const [count, setCount] = useState(25);\n  const [shouldRender, setShouldRender] = useState(true);\n\n  const onElementChange = (e: ChangeEvent<HTMLSelectElement>): void => setElement(e.target.value as SelectableElement);\n  const onCountChange = (e: ChangeEvent<HTMLSelectElement>): void => setCount(+e.target.value);\n  const onShouldRenderChange = (e: ChangeEvent<HTMLInputElement>): void => setShouldRender(e.target.checked);\n\n  const createElement = (count: number) => {\n    const children = 'Lorem Ipsum ' + count;\n    switch (element) {\n      case 'checkbox':\n        return (\n          <PCheckboxWrapper key={count} label={children}>\n            <input type=\"checkbox\" />\n          </PCheckboxWrapper>\n        );\n      case 'button':\n        return <PButton key={count} variant=\"primary\" children={children} />;\n      case 'text':\n        return <PText key={count} children={children} />;\n    }\n  };\n\n  return (\n    <>\n      <PGrid>\n        <PGridItem size=\"12\">\n          <PHeadline variant=\"headline-4\">Choose Element and Count</PHeadline>\n        </PGridItem>\n        <PGridItem size=\"4\">\n          <PSelectWrapper>\n            <select value={element} onChange={onElementChange}>\n              {SELECTABLE_ELEMENTS.map((value) => (\n                <option key={value} value={value} children={value} />\n              ))}\n            </select>\n          </PSelectWrapper>\n        </PGridItem>\n        <PGridItem size=\"4\">\n          <PSelectWrapper>\n            <select value={count} onChange={onCountChange}>\n              {SELECTABLE_COUNTS.map((value) => (\n                <option key={value} value={value} children={value} />\n              ))}\n            </select>\n          </PSelectWrapper>\n        </PGridItem>\n        <PGridItem size=\"4\">\n          <PCheckboxWrapper label=\"Render\">\n            <input type=\"checkbox\" onChange={onShouldRenderChange} checked={shouldRender} />\n          </PCheckboxWrapper>\n        </PGridItem>\n      </PGrid>\n      <PGrid style={{ marginTop: '2rem' }}>\n        <PGridItem size=\"12\">{shouldRender && Array.from(Array(count)).map((value, i) => createElement(i))}</PGridItem>\n      </PGrid>\n    </>\n  );\n};\n","import { RouteProps } from 'react-router-dom';\nimport * as fromPages from './pages';\n\nexport type RouteType = RouteProps & {\n  name: string;\n  path: string; // override string | string[]\n};\n\nexport const routes: RouteType[] = [\n  {\n    name: 'Collection',\n    path: '/collection',\n    component: fromPages.CollectionPage,\n  },\n  {\n    name: 'Forms',\n    path: '/forms',\n    component: fromPages.FormsPage,\n  },\n  {\n    name: 'Performance',\n    path: '/performance',\n    component: fromPages.PerformancePage,\n  },\n  {\n    name: 'Phn Header',\n    path: '/phn-header',\n    component: fromPages.PhnHeaderPage,\n  },\n  {\n    name: 'Utilities',\n    path: '/utilities',\n    component: fromPages.UtilitiesPage,\n  },\n];\n","import { useState } from 'react';\nimport {\n  PButton,\n  PButtonPure,\n  PDivider,\n  PGrid,\n  PGridItem,\n  PHeadline,\n  PIcon,\n  PLink,\n  PLinkPure,\n  PPagination,\n  PSpinner,\n} from '@porsche-design-system/components-react';\n\nexport const CollectionPage = (): JSX.Element => {\n  const [showHeadline, setShowHeadline] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const handleSubmit = (): void => {\n    setShowHeadline(true);\n    setIsDisabled((prev) => !prev);\n  };\n\n  const handleDismiss = (): void => {\n    setShowHeadline(false);\n    setIsDisabled((prev) => !prev);\n  };\n\n  const handleActivePage = (event: CustomEvent): void => {\n    setActivePage(event.detail.page);\n  };\n\n  return (\n    <PGrid>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Buttons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PButton disabled={isDisabled} onClick={handleSubmit}>\n          Submit\n        </PButton>\n      </PGridItem>\n      <PGridItem size=\"12\" className=\"contentWrapperSmall\">\n        <PButtonPure disabled={!isDisabled} onClick={handleDismiss}>\n          Dismiss\n        </PButtonPure>\n      </PGridItem>\n      {showHeadline && (\n        <PGridItem size=\"12\" className=\"contentWrapperSmall\">\n          {/*To illustrate working custom elements during the tests the buttons insert/dismiss a headline*/}\n          <PHeadline variant=\"headline-4\">Headline appears through Button click</PHeadline>\n        </PGridItem>\n      )}\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Links</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      {/*Example of all Link variation which are provided by the Porsche Design System*/}\n      <PGridItem size=\"12\">\n        <PLink>\n          <a href=\"https://www.porsche.com\" className=\"removeLinkStyle\">\n            porsche.com\n          </a>\n        </PLink>\n      </PGridItem>\n      <PGridItem size=\"12\" className=\"contentWrapperBig\">\n        <PLinkPure>\n          <a href=\"#hashTest\" className=\"removeLinkStyle\">\n            Test PLinkPure\n          </a>\n        </PLinkPure>\n        <PLinkPure href=\"#propHashTest\">Test propHash</PLinkPure>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Icons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PSpinner size=\"small\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PIcon size=\"medium\" name=\"highway\" role=\"img\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        {/* Simple usage of PPagination. By linking state to activePage, we can listen to the pageChange event of the component */}\n        <PHeadline variant=\"headline-4\">You are on Page {activePage} Page</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PPagination totalItemsCount={11} itemsPerPage={3} activePage={activePage} onPageChange={handleActivePage} />\n      </PGridItem>\n    </PGrid>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport {\n  PCheckboxWrapper,\n  PDivider,\n  PFlex,\n  PFlexItem,\n  PHeadline,\n  PRadioButtonWrapper,\n  PSelectWrapper,\n  PTextareaWrapper,\n  PTextFieldWrapper,\n} from '@porsche-design-system/components-react';\n\nexport const FormsPage = (): JSX.Element => {\n  const [select, setSelect] = useState('Change this Headline by selecting');\n  const [checkBox, setCheckBox] = useState(false);\n  const [radioButton, setRadioButton] = useState(false);\n  const [textField, setTextField] = useState('Change this Headline by typing');\n\n  const handleSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n    setSelect(e.target.value);\n  };\n\n  const handleCheckBox = (e: FormEvent<HTMLInputElement>): void => {\n    if (checkBox) {\n      setCheckBox(false);\n    } else {\n      setCheckBox(true);\n    }\n  };\n\n  const handleRadioButton = (e: FormEvent<HTMLInputElement>): void => {\n    setRadioButton(true);\n  };\n\n  const handleTextField = (e: ChangeEvent<HTMLInputElement>): void => {\n    setTextField(e.target.value);\n  };\n\n  return (\n    <PFlex direction=\"column\">\n      <PFlexItem>\n        <PHeadline variant=\"headline-3\">Form examples</PHeadline>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        {/*To illustrate working custom elements during the tests the selected value is displayed in the headline */}\n        <PHeadline variant=\"headline-4\">{select}</PHeadline>\n        <form>\n          <PSelectWrapper>\n            <select data-testid=\"select\" value={select} onChange={(e) => handleSelect(e)}>\n              <option value=\"Headline A\">A</option>\n              <option value=\"Headline B\">B</option>\n              <option value=\"Headline C\">C</option>\n            </select>\n          </PSelectWrapper>\n        </form>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        {/*Checking the Checkbox makes the headline appear*/}\n        {checkBox ? <PHeadline variant=\"headline-4\">Checkbox Works</PHeadline> : ''}\n        <PCheckboxWrapper label=\"Some label\" hideLabel={false}>\n          <input data-testid=\"checkbox\" type=\"checkbox\" name=\"TestBox\" onInput={(e) => handleCheckBox(e)} />\n        </PCheckboxWrapper>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        {/* Clicking the Radiobutton makes the headline appear*/}\n        {radioButton ? <PHeadline variant=\"headline-4\">Radio Works</PHeadline> : ''}\n        <PRadioButtonWrapper label=\"Some label\" hideLabel={false}>\n          <input data-testid=\"radiobutton\" type=\"radio\" name=\"RadioButton\" onInput={(e) => handleRadioButton(e)} />\n        </PRadioButtonWrapper>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        <form>\n          <PTextareaWrapper label=\"Test TextArea\" hideLabel={false}>\n            <textarea name=\"Testarea\"></textarea>\n          </PTextareaWrapper>\n        </form>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        {/*The headline changes according to the text field input*/}\n        <PHeadline variant=\"headline-4\">{textField}</PHeadline>\n        <PTextFieldWrapper label=\"Test TextField\" hideLabel={false}>\n          <input data-testid=\"input\" type=\"text\" name=\"Textfield\" onChange={(e) => handleTextField(e)} />\n        </PTextFieldWrapper>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        <form>\n          <PFlexItem>\n            <PTextFieldWrapper>\n              {/*Example of slotted links*/}\n              <span slot=\"label\">\n                Some label with a <a href=\"https://designsystem.porsche.com\">Slotted Link</a>.\n              </span>\n              <input type=\"text\" aria-invalid={true} name=\"some-name\" onChange={(e) => handleTextField(e)} />\n            </PTextFieldWrapper>\n          </PFlexItem>\n        </form>\n      </PFlexItem>\n    </PFlex>\n  );\n};\n","import { PButton, PIcon, PLinkPure } from '@porsche-design-system/components-react';\n\nexport const PhnHeaderPage = (): JSX.Element => (\n  <>\n    <phn-header env=\"preview\" style={{ position: 'absolute', left: 0, right: 0 }} />\n\n    <div style={{ paddingTop: 150 }}>\n      <div>\n        <PButton>Some PButton</PButton>\n      </div>\n      <div>\n        <PLinkPure>Some PLinkPure</PLinkPure>\n      </div>\n      <div>\n        <PIcon name=\"configurate\" />\n        <PIcon name=\"compare\" />\n        <PIcon name=\"search\" />\n      </div>\n    </div>\n  </>\n);\n","import { color, text } from '@porsche-design-system/utilities';\nimport './UtilitiesPage.scss';\n\n/**\n * Test site to see if utilities package works\n */\nexport const UtilitiesPage = (): JSX.Element => {\n  return (\n    <>\n      <div style={text.medium}>JS utilities</div>\n      <div style={{ width: 50, height: 50, background: color.brand }} />\n      <div className=\"textSizeMedium\">Scss utilities</div>\n      <div style={{ width: 50, height: 50 }} className=\"backgroundColorPds\" />\n    </>\n  );\n};\n","import { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport { PGrid, PGridItem, PHeadline, PDivider, PLinkPure } from '@porsche-design-system/components-react';\nimport './App.css';\nimport { routes } from './routes';\n\nexport const App = (): JSX.Element => {\n  return (\n    <Router>\n      <div className=\"pageLayout\">\n        <PGrid>\n          <PGridItem size={12}>\n            <PHeadline variant=\"headline-2\" align=\"center\">\n              Example usage of the Porsche-Design-System React\n            </PHeadline>\n          </PGridItem>\n          <PGridItem size={12}>\n            <PDivider className=\"divider\" />\n          </PGridItem>\n          <PGridItem size={12}>\n            {routes.map((route) => (\n              <PLinkPure key={route.path}>\n                <Link to={route.path} children={route.name} />\n              </PLinkPure>\n            ))}\n          </PGridItem>\n          <PGridItem size={12}>\n            <PDivider className=\"divider\" />\n          </PGridItem>\n        </PGrid>\n        <Switch>\n          {routes.map((route) => (\n            <Route key={route.path} {...route} />\n          ))}\n          <Route path=\"/\" exact>\n            <Redirect to={routes.find((x) => x.name === 'Collection')?.path!} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { applyPolyfills, defineCustomElements as definePorscheNavigation } from '@porschehn/navigation/loader';\nimport { PorscheDesignSystemProvider } from '@porsche-design-system/components-react'\n\nReactDOM.render(\n  <StrictMode>\n  <PorscheDesignSystemProvider>\n    <App />\n  </PorscheDesignSystemProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\napplyPolyfills().then(() => {\n  definePorscheNavigation(window);\n});\n"],"sourceRoot":""}