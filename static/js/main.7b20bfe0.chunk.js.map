{"version":3,"sources":["../node_modules/@porsche-design-system/components-react/node_modules/@porsche-design-system/components-js/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@porschehn/navigation/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/CollectionPage.tsx","pages/FormsPage.tsx","pages/PhnHeaderPage.tsx","pages/UtilitiesPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CollectionPage","useState","showHeadline","setShowHeadline","activePage","setActivePage","isDisabled","setIsDisabled","size","variant","className","disabled","onClick","prev","href","name","role","data-testid","totalItemsCount","itemsPerPage","onPageChange","event","detail","page","FormsPage","select","setSelect","checkBox","setCheckBox","radioButton","setRadioButton","textField","setTextField","handleTextField","target","value","direction","onChange","handleSelect","label","hideLabel","type","onInput","slot","aria-invalid","PhnHeaderPage","env","style","position","left","right","paddingTop","UtilitiesPage","text","medium","width","height","background","color","brand","App","align","to","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","applyPolyfills","definePorscheNavigation"],"mappings":"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","file":"static/js/main.7b20bfe0.chunk.js","sourcesContent":["var map = {\n\t\"./p-button-pure.entry.js\": [\n\t\t399,\n\t\t4\n\t],\n\t\"./p-button.entry.js\": [\n\t\t400,\n\t\t12\n\t],\n\t\"./p-checkbox-wrapper.entry.js\": [\n\t\t401,\n\t\t8\n\t],\n\t\"./p-content-wrapper.entry.js\": [\n\t\t402,\n\t\t20\n\t],\n\t\"./p-divider.entry.js\": [\n\t\t403,\n\t\t21\n\t],\n\t\"./p-fieldset-wrapper.entry.js\": [\n\t\t404,\n\t\t22\n\t],\n\t\"./p-flex-item.entry.js\": [\n\t\t405,\n\t\t23\n\t],\n\t\"./p-flex.entry.js\": [\n\t\t406,\n\t\t24\n\t],\n\t\"./p-grid-item.entry.js\": [\n\t\t407,\n\t\t25\n\t],\n\t\"./p-grid.entry.js\": [\n\t\t408,\n\t\t26\n\t],\n\t\"./p-headline.entry.js\": [\n\t\t409,\n\t\t18\n\t],\n\t\"./p-icon_2.entry.js\": [\n\t\t410,\n\t\t6\n\t],\n\t\"./p-link-pure.entry.js\": [\n\t\t411,\n\t\t5\n\t],\n\t\"./p-link-social.entry.js\": [\n\t\t412,\n\t\t15\n\t],\n\t\"./p-link.entry.js\": [\n\t\t413,\n\t\t16\n\t],\n\t\"./p-marque.entry.js\": [\n\t\t414,\n\t\t17\n\t],\n\t\"./p-pagination.entry.js\": [\n\t\t415,\n\t\t14\n\t],\n\t\"./p-radio-button-wrapper.entry.js\": [\n\t\t416,\n\t\t9\n\t],\n\t\"./p-select-wrapper.entry.js\": [\n\t\t417,\n\t\t10\n\t],\n\t\"./p-spinner.entry.js\": [\n\t\t418,\n\t\t27\n\t],\n\t\"./p-text-field-wrapper.entry.js\": [\n\t\t419,\n\t\t7\n\t],\n\t\"./p-text-list-item.entry.js\": [\n\t\t420,\n\t\t19\n\t],\n\t\"./p-text-list.entry.js\": [\n\t\t421,\n\t\t28\n\t],\n\t\"./p-textarea-wrapper.entry.js\": [\n\t\t422,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 387;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./phn-back-button_43.entry.js\": [\n\t\t426,\n\t\t31\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 394;\nmodule.exports = webpackAsyncContext;","import React, { useState } from 'react';\nimport {\n  PButton,\n  PButtonPure,\n  PDivider,\n  PGrid,\n  PGridItem,\n  PHeadline,\n  PIcon,\n  PLink,\n  PLinkPure,\n  PPagination,\n  PSpinner,\n} from '@porsche-design-system/components-react';\n\nexport const CollectionPage = (): JSX.Element => {\n  const [showHeadline, setShowHeadline] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const handleSubmit = (): void => {\n    setShowHeadline(true);\n    setIsDisabled((prev) => !prev);\n  };\n\n  const handleDismiss = (): void => {\n    setShowHeadline(false);\n    setIsDisabled((prev) => !prev);\n  };\n\n  const handleActivePage = (event: CustomEvent): void => {\n    setActivePage(event.detail.page);\n  };\n\n  return (\n    <PGrid>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Buttons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PButton disabled={isDisabled} onClick={handleSubmit}>\n          Submit\n        </PButton>\n      </PGridItem>\n      <PGridItem size=\"12\" className=\"contentWrapperSmall\">\n        <PButtonPure disabled={!isDisabled} onClick={handleDismiss}>\n          Dismiss\n        </PButtonPure>\n      </PGridItem>\n      {showHeadline && (\n        <PGridItem size=\"12\" className=\"contentWrapperSmall\">\n          {/*To illustrate the mock procedure during the tests the buttons insert/dismiss a headline*/}\n          <PHeadline variant=\"headline-4\">Headline appears through Button click</PHeadline>\n        </PGridItem>\n      )}\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Links</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      {/*Example of all Link variation which are provided by the Porsche Design System*/}\n      <PGridItem size=\"12\">\n        <a href=\"https://www.porsche.com\" className=\"removeLinkStyle\">\n          <PLink>porsche.com</PLink>\n        </a>\n      </PGridItem>\n      <PGridItem size=\"12\" className=\"contentWrapperBig\">\n        <a href=\"#hashTest\" className=\"removeLinkStyle\">\n          <PLinkPure>Test PLinkPure</PLinkPure>\n        </a>\n        <PLinkPure href=\"#propHashTest\">Test propHash</PLinkPure>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Icons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PSpinner size=\"small\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PIcon size=\"medium\" name=\"highway\" role=\"img\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        {/* Simple usage of PPagination. By linking state to activePage, we can listen to the pageChange event of the component */}\n        <PHeadline variant=\"headline-4\">You are on Page {activePage} Page</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PPagination\n          data-testid=\"pagination\"\n          totalItemsCount={11}\n          itemsPerPage={3}\n          activePage={activePage}\n          onPageChange={handleActivePage}\n        />\n      </PGridItem>\n    </PGrid>\n  );\n};\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport {\n  PCheckboxWrapper,\n  PDivider,\n  PFlex,\n  PFlexItem,\n  PHeadline,\n  PRadioButtonWrapper,\n  PSelectWrapper,\n  PTextareaWrapper,\n  PTextFieldWrapper,\n} from '@porsche-design-system/components-react';\n\nexport const FormsPage = (): JSX.Element => {\n  const [select, setSelect] = useState('Change this Headline by selecting');\n  const [checkBox, setCheckBox] = useState(false);\n  const [radioButton, setRadioButton] = useState(false);\n  const [textField, setTextField] = useState('Change this Headline by typing');\n\n  const handleSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n    setSelect(e.target.value);\n  };\n\n  const handleCheckBox = (e: FormEvent<HTMLInputElement>): void => {\n    if (checkBox) {\n      setCheckBox(false);\n    } else {\n      setCheckBox(true);\n    }\n  };\n\n  const handleRadioButton = (e: FormEvent<HTMLInputElement>): void => {\n    setRadioButton(true);\n  };\n\n  const handleTextField = (e: ChangeEvent<HTMLInputElement>): void => {\n    setTextField(e.target.value);\n  };\n\n  return (\n    <PFlex direction=\"column\">\n      <PFlexItem>\n        <PHeadline variant=\"headline-3\">Form examples</PHeadline>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        {/*To illustrate the mock procedure during the tests the selected value is displayed in the headline */}\n        <PHeadline variant=\"headline-4\">{select}</PHeadline>\n        <form>\n          <PSelectWrapper>\n            <select data-testid=\"select\" value={select} onChange={(e) => handleSelect(e)}>\n              <option value=\"Headline A\">A</option>\n              <option value=\"Headline B\">B</option>\n              <option value=\"Headline C\">C</option>\n            </select>\n          </PSelectWrapper>\n        </form>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        {/*Checking the Checkbox makes the headline appear*/}\n        {checkBox ? <PHeadline variant=\"headline-4\">Checkbox Works</PHeadline> : ''}\n        <PCheckboxWrapper label=\"Some label\" hideLabel={false}>\n          <input data-testid=\"checkbox\" type=\"checkbox\" name=\"TestBox\" onInput={(e) => handleCheckBox(e)} />\n        </PCheckboxWrapper>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        {/* Clicking the Radiobutton makes the headline appear*/}\n        {radioButton ? <PHeadline variant=\"headline-4\">Radio Works</PHeadline> : ''}\n        <PRadioButtonWrapper label=\"Some label\" hideLabel={false}>\n          <input data-testid=\"radiobutton\" type=\"radio\" name=\"RadioButton\" onInput={(e) => handleRadioButton(e)} />\n        </PRadioButtonWrapper>\n      </PFlexItem>\n      <PFlexItem>\n        <PDivider className=\"divider\" />\n      </PFlexItem>\n      <PFlexItem>\n        <form>\n          <PTextareaWrapper label=\"Test TextArea\" hideLabel={false}>\n            <textarea name=\"Testarea\"></textarea>\n          </PTextareaWrapper>\n        </form>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        {/*The headline changes according to the text field input*/}\n        <PHeadline variant=\"headline-4\">{textField}</PHeadline>\n        <PTextFieldWrapper label=\"Test TextField\" hideLabel={false}>\n          <input data-testid=\"input\" type=\"text\" name=\"Textfield\" onChange={(e) => handleTextField(e)} />\n        </PTextFieldWrapper>\n      </PFlexItem>\n      <PFlexItem className=\"contentWrapperSmall\">\n        <form>\n          <PFlexItem>\n            <PTextFieldWrapper>\n              {/*Example of slotted links*/}\n              <span slot=\"label\">\n                Some label with a{' '}\n                <a data-testid=\"slottedHref\" href=\"https://designsystem.porsche.com\">\n                  Slotted Link\n                </a>\n                .\n              </span>\n              <input\n                data-testid=\"slottedInput\"\n                type=\"text\"\n                aria-invalid={true}\n                name=\"some-name\"\n                onChange={(e) => handleTextField(e)}\n              />\n            </PTextFieldWrapper>\n          </PFlexItem>\n        </form>\n      </PFlexItem>\n    </PFlex>\n  );\n};\n","import React from 'react';\nimport { PButton, PIcon, PLinkPure } from '@porsche-design-system/components-react';\n\nexport const PhnHeaderPage = (): JSX.Element => (\n  <>\n    <phn-header env=\"preview\" style={{ position: 'absolute', left: 0, right: 0 }} />\n\n    <div style={{ paddingTop: 150 }}>\n      <div>\n        <PButton>Some PButton</PButton>\n      </div>\n      <div>\n        <PLinkPure>Some PLinkPure</PLinkPure>\n      </div>\n      <div>\n        <PIcon name=\"configurate\" />\n        <PIcon name=\"compare\" />\n        <PIcon name=\"search\" />\n      </div>\n    </div>\n  </>\n);\n","import React from 'react';\nimport { color, text } from '@porsche-design-system/utilities';\nimport './UtilitiesPage.scss';\n\n/**\n * Test site to see if utilities package works\n */\nexport const UtilitiesPage = (): JSX.Element => {\n  return (\n    <>\n      <div style={text.medium}>JS utilities</div>\n      <div style={{ width: 50, height: 50, background: color.brand }} />\n      <div className=\"textSizeMedium\">Scss utilities</div>\n      <div style={{ width: 50, height: 50 }} className=\"backgroundColorPds\" />\n    </>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport { PGrid, PGridItem, PHeadline, PLinkPure, PDivider } from '@porsche-design-system/components-react';\nimport './App.css';\nimport { CollectionPage, FormsPage, PhnHeaderPage, UtilitiesPage } from './pages';\n\nexport const App = (): JSX.Element => {\n  return (\n    <Router>\n      <div className=\"pageLayout\">\n        <PGrid>\n          <PGridItem size={12}>\n            <PHeadline variant=\"headline-2\" align=\"center\">\n              Example usage of the Porsche-Design-System React\n            </PHeadline>\n          </PGridItem>\n          <PGridItem size={12}>\n            <PDivider className=\"divider\" />\n          </PGridItem>\n          <PGridItem size={12}>\n            <Link to=\"/collection\" className=\"removeLinkStyle\">\n              <PLinkPure>Components Collection</PLinkPure>\n            </Link>\n            <Link to=\"/forms\" className=\"removeLinkStyle\">\n              <PLinkPure>Forms</PLinkPure>\n            </Link>\n            <Link to=\"/utilities\" className=\"removeLinkStyle\">\n              <PLinkPure>Utilities</PLinkPure>\n            </Link>\n            <Link to=\"/phn-header\" className=\"removeLinkStyle\">\n              <PLinkPure>Phn Header</PLinkPure>\n            </Link>\n          </PGridItem>\n          <PGridItem size={12}>\n            <PDivider className=\"divider\" />\n          </PGridItem>\n        </PGrid>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/collection\" />\n          </Route>\n          <Route path=\"/collection\">\n            <CollectionPage />\n          </Route>\n          <Route path=\"/forms\">\n            <FormsPage />\n          </Route>\n          <Route path=\"/utilities\">\n            <UtilitiesPage />\n          </Route>\n          <Route path=\"/phn-header\">\n            <PhnHeaderPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyPolyfills, defineCustomElements as definePorscheNavigation } from '@porschehn/navigation/loader';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\napplyPolyfills().then(() => {\n  definePorscheNavigation(window);\n});\n"],"sourceRoot":""}